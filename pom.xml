<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.sow</groupId>
  <artifactId>biblioService2</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>biblioService2</name>
  <url>http://maven.apache.org</url>
  
   <properties>
        <org.springframework.version>3.2.1.RELEASE</org.springframework.version>
        <hibernate-core-version>3.6.8.Final</hibernate-core-version>
         <settings.jdbc.connection.url>jdbc:mysql://localhost:3306/test</settings.jdbc.connection.url>
    </properties>
    
  <dependencies>
  
 <!-- logging -->
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
             <version>1.7.5</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
             <version>1.7.5</version>
        </dependency>        
        
        <!-- DB / Hibernate / EhCache-->
        <dependency>
        	<groupId>org.hibernate.javax.persistence</groupId>
        	<artifactId>hibernate-jpa-2.0-api</artifactId>
        	<version>1.0.1.Final</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate-core-version}</version>
        </dependency>
        <dependency>
            <groupId>net.sf.ehcache</groupId>
            <artifactId>ehcache-core</artifactId>
            <version>2.3.0</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
             <version>1.0.1B</version>
        </dependency>
        <dependency>
            <groupId>com.oracle</groupId>
            <artifactId>jdbc-driver</artifactId>
            <version>10gR2</version>
            <scope>provided</scope>
        </dependency>

        <!-- Spring -->
        <!--
            Core utilities used by other modules.
            Define this if you use Spring Utility APIs (org.springframework.core.*/org.springframework.util.*)
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>
        <!--
            Bean Factory and JavaBeans utilities (depends on spring-core)
            Define this if you use Spring Bean APIs (org.springframework.beans.*)
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>
        <!--
            Application Context (depends on spring-core, spring-expression, spring-aop, spring-beans)
            This is the central artifact for Spring's Dependency Injection Container and is generally always defined
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>        
        <!--
            Various Application Context utilities, including EhCache, JavaMail, Quartz, and Freemarker integration
            Define this if you need any of these integrations
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context-support</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>        
        <!--
            Transaction Management Abstraction (depends on spring-core, spring-beans, spring-aop, spring-context)
            Define this if you use Spring Transactions or DAO Exception Hierarchy
            (org.springframework.transaction.*/org.springframework.dao.*)
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-tx</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>        
        <!--
            JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, spring-tx)
            Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*)
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-jdbc</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>        
        <!--
            Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, and iBatis.
            (depends on spring-core, spring-beans, spring-context, spring-tx)
            Define this if you need ORM (org.springframework.orm.*)
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-orm</artifactId>
          <version>${org.springframework.version}</version>
        </dependency>
        
                    		
		
		<!-- OpenId - openid4java version must match the one used by authserver -->           
		<dependency>
		    <groupId>org.openid4java</groupId>
		    <artifactId>openid4java-nodeps</artifactId>
		    <version>0.9.5</version>
		</dependency>
		<dependency>
		    <groupId>commons-httpclient</groupId>
		    <artifactId>commons-httpclient</artifactId>
		    <version>3.1</version>
		</dependency>
		<dependency>
		    <groupId>net.sourceforge.nekohtml</groupId>
		    <artifactId>nekohtml</artifactId>
		    <version>1.9.10</version>
		</dependency>
		
		<!-- Other -->       		
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
              <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjweaver</artifactId>
            <version>1.6.10</version>
        </dependency>
        <dependency>
            <groupId>org.aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
             <version>1.6.10</version>
        </dependency>
                    
        <!-- test dependencies -->
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
             <version>1.3</version>
            <scope>test</scope>
        </dependency>
        <!--
            Support for testing Spring applications with tools such as JUnit and TestNG
            This artifact is generally always defined with a 'test' scope for the integration testing framework and unit testing stubs
        -->
        <dependency>
          <groupId>org.springframework</groupId>
          <artifactId>spring-test</artifactId>
          <version>${org.springframework.version}</version>
          <scope>test</scope>
        </dependency>
        
         <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>6.8</version>
            <scope>test</scope>
        </dependency>
        
      <!--  Begin - Dependencies for MySQL -->
        
     <dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.6</version>
	</dependency>
	
	 <!--  End - Dependencies for MySQL -->
 
  </dependencies>
  
  <build>
    <plugins>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
        </plugins>
</build>
  
  <repositories>
  <repository>
        <id>java.net.m2repo</id>
        <name>java.net Maven 2 Repository</name>
        <url>http://download.java.net/maven/2/</url>
        <layout>default</layout>
    </repository>
    
    <!-- 
    
      I needed to add this local repository because of the below error.
      
      Could not find artifact com.oracle:jdbc-driver:jar:10gR2 in java.net.m2repo (http://download.java.net/maven/2/)
      
      I could have also resolved this problem by downloading and installing the required jar.
      
      Something like this - mvn install:install-file -DgroupId=com.oracle -DartifactId=ojdbc14 \
     -Dversion=10.2.0.3.0 -Dpackaging=jar -Dfile=ojdbc.jar -DgeneratePom=true
      
      http://stackoverflow.com/questions/1074869/find-oracle-jdbc-driver-in-maven-repository
    
     -->
    
    <repository>
            <id>repo.dossia.org.maven2.thirdparty</id>
            <name>Dossia Third Party Repository</name>
            <url>http://ops:9000/nexus/content/repositories/thirdparty</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
       
  
  </repositories>
</project>